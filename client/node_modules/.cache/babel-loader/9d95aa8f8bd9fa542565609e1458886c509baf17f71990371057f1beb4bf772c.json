{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surendra puri\\\\OneDrive\\\\Documents\\\\Desktop\\\\AnalyzedByIITIANS\\\\client\\\\src\\\\components\\\\commentEditDelete.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentPage = ({\n  userInfo,\n  editComment,\n  deleteComment\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch comments data when the component mounts\n    const fetchComments = async () => {\n      try {\n        const response = await axios.get(`http://localhost:4050/post/${id}/comment/${commentId}`); // Replace with your API endpoint\n        setComments(response.data); // Assuming the response has the comments array\n      } catch (err) {\n        console.error('Error fetching comments:', err);\n        setError('Failed to load comments');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchComments();\n  }, []); // Empty dependency array means this effect runs once when the component mounts\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading comments...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), comments.map((c, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: c.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }, this), \": \", c.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rating: \", [...Array(c.rating)].map((_, i) => \"★\").join(\"\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), (userInfo.id === c.userId || userInfo.role === 'ADMIN') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"three-dots-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-options-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editComment(c._id, prompt(\"Edit your comment\", c.text)),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteComment(c._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentPage, \"8VPOJpTEYMKNrfgFSHAYkrOXrKA=\", false, function () {\n  return [useParams];\n});\n_c = CommentPage;\nexport default CommentPage;\nvar _c;\n$RefreshReg$(_c, \"CommentPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","CommentPage","userInfo","editComment","deleteComment","_s","id","comments","setComments","loading","setLoading","error","setError","fetchComments","response","get","commentId","data","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","c","index","username","text","Array","rating","_","i","join","userId","role","onClick","_id","prompt","_c","$RefreshReg$"],"sources":["C:/Users/surendra puri/OneDrive/Documents/Desktop/AnalyzedByIITIANS/client/src/components/commentEditDelete.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst CommentPage = ({ userInfo, editComment, deleteComment }) => {\r\n  const { id } = useParams();\r\n  const [comments, setComments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch comments data when the component mounts\r\n    const fetchComments = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:4050/post/${id}/comment/${commentId}`); // Replace with your API endpoint\r\n        setComments(response.data); // Assuming the response has the comments array\r\n      } catch (err) {\r\n        console.error('Error fetching comments:', err);\r\n        setError('Failed to load comments');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchComments();\r\n  }, []); // Empty dependency array means this effect runs once when the component mounts\r\n\r\n  if (loading) return <div>Loading comments...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div className=\"comments-list\">\r\n      <h3>Comments:</h3>\r\n      {comments.map((c, index) => (\r\n        <div key={index} className=\"comment\">\r\n          <p><strong>{c.username}</strong>: {c.text}</p>\r\n          <p>Rating: {[...Array(c.rating)].map((_, i) => \"★\").join(\"\")}</p>\r\n\r\n          {(userInfo.id === c.userId || userInfo.role === 'ADMIN') && (\r\n            <div className=\"comment-options\">\r\n              <button className=\"three-dots-btn\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </button>\r\n              <div className=\"comment-options-menu\">\r\n                <button onClick={() => editComment(c._id, prompt(\"Edit your comment\", c.text))}>Edit</button>\r\n                <button onClick={() => deleteComment(c._id)}>Delete</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}