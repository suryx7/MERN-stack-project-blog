{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surendra puri\\\\OneDrive\\\\Documents\\\\Desktop\\\\AnalyzedByIITIANS\\\\client\\\\src\\\\pages\\\\commentPage.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { UserContext } from \"../components/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentPage() {\n  _s();\n  const {\n    id\n  } = useParams(); // Post ID from the URL\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const [newRating, setNewRating] = useState(0);\n  const {\n    userInfo\n  } = useContext(UserContext);\n  useEffect(() => {\n    // Fetch comments for the specific post\n    fetch(`http://localhost:4050/post/${id}/comments`).then(response => response.json()).then(data => setComments(data));\n  }, [id]);\n  async function addCommentAndRating() {\n    if (!newComment.trim() && newRating === 0) {\n      alert(\"Comment or rating is required.\");\n      return;\n    }\n    const response = await fetch(`http://localhost:4050/post/${id}/comments`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        text: newComment,\n        rating: newRating\n      })\n    });\n    if (response.ok) {\n      const addedComment = await response.json();\n      setComments([...comments, addedComment]); // Add the new comment to the state\n      setNewComment(\"\"); // Clear the input field\n      setNewRating(0); // Reset the rating\n    } else {\n      alert(\"Failed to add comment or rating.\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments & Ratings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write a comment...\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rating-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Rate: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setNewRating(star),\n          className: star <= newRating ? \"active-star\" : \"\",\n          children: \"\\u2605\"\n        }, star, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCommentAndRating,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"@\", comment.author.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: new Date(comment.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Rating: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: star <= (comment.rating || 0) ? \"active-star\" : \"\",\n            children: \"\\u2605\"\n          }, star, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentPage, \"pxULZ9rlOjU6F+TG4D1nPqSSp60=\", false, function () {\n  return [useParams];\n});\n_c = CommentPage;\nvar _c;\n$RefreshReg$(_c, \"CommentPage\");","map":{"version":3,"names":["useContext","useEffect","useState","useParams","UserContext","jsxDEV","_jsxDEV","CommentPage","_s","id","comments","setComments","newComment","setNewComment","newRating","setNewRating","userInfo","fetch","then","response","json","data","addCommentAndRating","trim","alert","method","headers","credentials","body","JSON","stringify","text","rating","ok","addedComment","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","map","star","onClick","comment","author","username","Date","createdAt","toLocaleString","_id","_c","$RefreshReg$"],"sources":["C:/Users/surendra puri/OneDrive/Documents/Desktop/AnalyzedByIITIANS/client/src/pages/commentPage.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { UserContext } from \"../components/UserContext\";\r\n\r\nexport default function CommentPage() {\r\n  const { id } = useParams(); // Post ID from the URL\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const [newRating, setNewRating] = useState(0);\r\n  const { userInfo } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    // Fetch comments for the specific post\r\n    fetch(`http://localhost:4050/post/${id}/comments`)\r\n      .then((response) => response.json())\r\n      .then((data) => setComments(data));\r\n  }, [id]);\r\n\r\n  async function addCommentAndRating() {\r\n    if (!newComment.trim() && newRating === 0) {\r\n      alert(\"Comment or rating is required.\");\r\n      return;\r\n    }\r\n\r\n    const response = await fetch(`http://localhost:4050/post/${id}/comments`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ text: newComment, rating: newRating }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const addedComment = await response.json();\r\n      setComments([...comments, addedComment]); // Add the new comment to the state\r\n      setNewComment(\"\"); // Clear the input field\r\n      setNewRating(0); // Reset the rating\r\n    } else {\r\n      alert(\"Failed to add comment or rating.\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"comment-section\">\r\n      <h2>Comments & Ratings</h2>\r\n      <div className=\"comment-input\">\r\n        <textarea\r\n          placeholder=\"Write a comment...\"\r\n          value={newComment}\r\n          onChange={(e) => setNewComment(e.target.value)}\r\n        ></textarea>\r\n        <div className=\"rating-input\">\r\n          <span>Rate: </span>\r\n          {[1, 2, 3, 4, 5].map((star) => (\r\n            <button\r\n              key={star}\r\n              onClick={() => setNewRating(star)}\r\n              className={star <= newRating ? \"active-star\" : \"\"}\r\n            >\r\n              ★\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <button onClick={addCommentAndRating}>Submit</button>\r\n      </div>\r\n      <div className=\"comments-list\">\r\n        {comments.map((comment) => (\r\n          <div key={comment._id} className=\"comment-item\">\r\n            <div className=\"comment-header\">\r\n              <strong>@{comment.author.username}</strong>{\" \"}\r\n              <small>{new Date(comment.createdAt).toLocaleString()}</small>\r\n            </div>\r\n            <p>{comment.text}</p>\r\n            <div className=\"rating-display\">\r\n              <span>Rating: </span>\r\n              {[1, 2, 3, 4, 5].map((star) => (\r\n                <span\r\n                  key={star}\r\n                  className={star <= (comment.rating || 0) ? \"active-star\" : \"\"}\r\n                >\r\n                  ★\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}