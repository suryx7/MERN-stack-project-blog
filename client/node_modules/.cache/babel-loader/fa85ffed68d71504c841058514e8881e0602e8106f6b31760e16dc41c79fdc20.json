{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surendra puri\\\\OneDrive\\\\Documents\\\\Desktop\\\\AnalyzedByIITIANS\\\\client\\\\src\\\\pages\\\\forgotPasswordPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForgotPasswordPage() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  async function handleForgotPassword(ev) {\n    ev.preventDefault();\n    const response = await fetch(\"http://localhost:4050/forgot-password\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        email\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      setMessage(\"Password reset link sent to your email.\");\n    } else {\n      setMessage(\"Error: Unable to send reset link. Please try again.\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"forgot-password register\",\n    onSubmit: handleForgotPassword,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Enter your email\",\n      value: email,\n      onChange: ev => setEmail(ev.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPasswordPage, \"tgSpMP9vfF6GNBbNf9NcNEW5Oz0=\");\n_c = ForgotPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordPage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ForgotPasswordPage","_s","email","setEmail","message","setMessage","handleForgotPassword","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","ok","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/surendra puri/OneDrive/Documents/Desktop/AnalyzedByIITIANS/client/src/pages/forgotPasswordPage.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function ForgotPasswordPage() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  async function handleForgotPassword(ev) {\r\n    ev.preventDefault();\r\n    const response = await fetch(\"http://localhost:4050/forgot-password\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ email }),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    if (response.ok) {\r\n      setMessage(\"Password reset link sent to your email.\");\r\n    } else {\r\n      setMessage(\"Error: Unable to send reset link. Please try again.\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className=\"forgot-password register\" onSubmit={handleForgotPassword}>\r\n      <h1>Forgot Password</h1>\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Enter your email\"\r\n        value={email}\r\n        onChange={(ev) => setEmail(ev.target.value)}\r\n        required\r\n      />\r\n      <button>Submit</button>\r\n      {message && <p>{message}</p>}\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,eAAeS,oBAAoBA,CAACC,EAAE,EAAE;IACtCA,EAAE,CAACC,cAAc,CAAC,CAAC;IACnB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;MACpEC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ;MAAM,CAAC,CAAC;MAC/Ba,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IACF,IAAIN,QAAQ,CAACO,EAAE,EAAE;MACfX,UAAU,CAAC,yCAAyC,CAAC;IACvD,CAAC,MAAM;MACLA,UAAU,CAAC,qDAAqD,CAAC;IACnE;EACF;EAEA,oBACEN,OAAA;IAAMkB,SAAS,EAAC,0BAA0B;IAACC,QAAQ,EAAEZ,oBAAqB;IAAAa,QAAA,gBACxEpB,OAAA;MAAAoB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBxB,OAAA;MACEyB,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAExB,KAAM;MACbyB,QAAQ,EAAGpB,EAAE,IAAKJ,QAAQ,CAACI,EAAE,CAACqB,MAAM,CAACF,KAAK,CAAE;MAC5CG,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFxB,OAAA;MAAAoB,QAAA,EAAQ;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACtBnB,OAAO,iBAAIL,OAAA;MAAAoB,QAAA,EAAIf;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEX;AAACtB,EAAA,CAhCuBD,kBAAkB;AAAA8B,EAAA,GAAlB9B,kBAAkB;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}