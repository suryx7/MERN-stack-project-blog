{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surendra puri\\\\OneDrive\\\\Documents\\\\Desktop\\\\AnalyzedByIITIANS\\\\client\\\\src\\\\pages\\\\EditPost.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport Editor from \"../components/Editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditPost() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [files, setFiles] = useState(\"\");\n  const [logofile, setLogofile] = useState(\"\");\n  const [courseOwner, setCourseOwner] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  useEffect(() => {\n    fetch(`http://localhost:4050/post/${id}`).then(response => response.json()).then(postInfo => {\n      setTitle(postInfo.title);\n      setCourseOwner(postInfo.courseOwner);\n      setContent(postInfo.content);\n      setSummary(postInfo.summary);\n    });\n  }, [id]);\n\n  // Handle summary word count\n  const handleSummaryChange = ev => {\n    const inputSummary = ev.target.value;\n    const wordCount = inputSummary.trim() ? inputSummary.trim().split(/\\s+/).length : 0;\n    if (wordCount <= wordLimit) {\n      setSummary(inputSummary);\n    }\n  };\n  const countWords = text => {\n    return text.trim() ? text.trim().split(/\\s+/).length : 0;\n  };\n  async function updatePost(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.set(\"title\", title);\n    data.set(\"courseOwner\", courseOwner);\n    data.set(\"summary\", summary);\n    data.set(\"content\", content);\n    data.set(\"id\", id);\n\n    // Append files if they exist\n    if (files !== null && files !== void 0 && files[0]) {\n      data.set(\"file\", files === null || files === void 0 ? void 0 : files[0]); // cover file\n    }\n    if (logofile !== null && logofile !== void 0 && logofile[0]) {\n      data.set(\"logofile\", logofile === null || logofile === void 0 ? void 0 : logofile[0]); // logo file\n    }\n    const response = await fetch(`http://localhost:4050/post`, {\n      method: \"PUT\",\n      body: data,\n      credentials: \"include\"\n    });\n    if (response.ok) {\n      setRedirect(true);\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/post/${id}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"createPost\",\n    onSubmit: updatePost,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: ev => setTitle(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Course Owner\",\n      value: courseOwner,\n      onChange: ev => setCourseOwner(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textarea-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Summary\",\n        value: summary,\n        onChange: handleSummaryChange,\n        rows: \"3\",\n        required: true,\n        className: \"summary-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"word-count\",\n        children: [\"Word Count: \", countWords(summary), \" / \", wordLimit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: ev => setFiles(ev.target.files) // Handle cover file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: ev => setLogofile(ev.target.files) // Handle logo file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      onChange: setContent,\n      value: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: \"5px\"\n      },\n      children: \"Update course info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(EditPost, \"NubUv2jhu5dP6eq2TgRNFMCFMa8=\", false, function () {\n  return [useParams];\n});\n_c = EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["useEffect","useState","Navigate","useParams","Editor","jsxDEV","_jsxDEV","EditPost","_s","id","title","setTitle","summary","setSummary","content","setContent","files","setFiles","logofile","setLogofile","courseOwner","setCourseOwner","redirect","setRedirect","fetch","then","response","json","postInfo","handleSummaryChange","ev","inputSummary","target","value","wordCount","trim","split","length","wordLimit","countWords","text","updatePost","preventDefault","data","FormData","set","method","body","credentials","ok","to","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","children","type","placeholder","onChange","rows","required","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/surendra puri/OneDrive/Documents/Desktop/AnalyzedByIITIANS/client/src/pages/EditPost.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Navigate, useParams } from \"react-router-dom\";\r\nimport Editor from \"../components/Editor\";\r\n\r\nexport default function EditPost() {\r\n  const { id } = useParams();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [summary, setSummary] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [files, setFiles] = useState(\"\");\r\n  const [logofile, setLogofile] = useState(\"\");\r\n  const [courseOwner, setCourseOwner] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:4050/post/${id}`)\r\n      .then((response) => response.json())\r\n      .then((postInfo) => {\r\n        setTitle(postInfo.title);\r\n        setCourseOwner(postInfo.courseOwner);\r\n        setContent(postInfo.content);\r\n        setSummary(postInfo.summary);\r\n      });\r\n  }, [id]);\r\n\r\n  // Handle summary word count\r\n  const handleSummaryChange = (ev) => {\r\n    const inputSummary = ev.target.value;\r\n    const wordCount = inputSummary.trim() ? inputSummary.trim().split(/\\s+/).length : 0;\r\n    if (wordCount <= wordLimit) {\r\n      setSummary(inputSummary);\r\n    }\r\n  };\r\n\r\n  const countWords = (text) => {\r\n    return text.trim() ? text.trim().split(/\\s+/).length : 0;\r\n  };\r\n\r\n  async function updatePost(ev) {\r\n    ev.preventDefault();\r\n    const data = new FormData();\r\n    data.set(\"title\", title);\r\n    data.set(\"courseOwner\", courseOwner);\r\n    data.set(\"summary\", summary);\r\n    data.set(\"content\", content);\r\n    data.set(\"id\", id);\r\n\r\n    // Append files if they exist\r\n    if (files?.[0]) {\r\n      data.set(\"file\", files?.[0]); // cover file\r\n    }\r\n    if (logofile?.[0]) {\r\n      data.set(\"logofile\", logofile?.[0]); // logo file\r\n    }\r\n\r\n    const response = await fetch(`http://localhost:4050/post`, {\r\n      method: \"PUT\",\r\n      body: data,\r\n      credentials: \"include\",\r\n    });\r\n\r\n    if (response.ok) {\r\n      setRedirect(true);\r\n    }\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Navigate to={`/post/${id}`} />;\r\n  }\r\n\r\n  return (\r\n    <form className=\"createPost\" onSubmit={updatePost}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChange={(ev) => setTitle(ev.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Course Owner\"\r\n        value={courseOwner}\r\n        onChange={(ev) => setCourseOwner(ev.target.value)}\r\n      />\r\n      <div className=\"textarea-container\">\r\n        <textarea\r\n          placeholder=\"Summary\"\r\n          value={summary}\r\n          onChange={handleSummaryChange}\r\n          rows=\"3\"\r\n          required\r\n          className=\"summary-textarea\"\r\n        ></textarea>\r\n        <p className=\"word-count\">\r\n          Word Count: {countWords(summary)} / {wordLimit}\r\n        </p>\r\n      </div>\r\n      <input\r\n        type=\"file\"\r\n        onChange={(ev) => setFiles(ev.target.files)} // Handle cover file\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        onChange={(ev) => setLogofile(ev.target.files)} // Handle logo file\r\n      />\r\n      <Editor onChange={setContent} value={content} />\r\n      <button style={{ marginTop: \"5px\" }}>Update course info</button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}