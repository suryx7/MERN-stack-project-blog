{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surendra puri\\\\OneDrive\\\\Documents\\\\Desktop\\\\AnalyzedByIITIANS\\\\client\\\\src\\\\pages\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport 'react-quill/dist/quill.snow.css';\nimport { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport Editor from \"../components/Editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePost() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [files, setFiles] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  // Handle summary word count\n  const handleSummaryChange = ev => {\n    const inputSummary = ev.target.value;\n    const wordCount = inputSummary.split(/\\s+/).length;\n    if (wordCount <= 100) {\n      // Limit to 100 words\n      setSummary(inputSummary);\n    }\n  };\n  async function createNewPost(ev) {\n    const data = new FormData();\n    data.set('title', title);\n    data.set('summary', summary);\n    data.set('content', content);\n    data.set('file', files[0]);\n    ev.preventDefault();\n    const response = await fetch('http://localhost:8081/post', {\n      method: 'POST',\n      body: data,\n      credentials: 'include'\n    });\n    if (response.ok) {\n      setRedirect(true);\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: createNewPost,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: ev => setTitle(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textarea-container custom-margin\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Summary\",\n        value: summary,\n        onChange: handleSummaryChange,\n        rows: \"3\",\n        required: true,\n        className: \"summary-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"word-count\",\n        children: [\"Word Count: \", countWords(summary), \" / \", wordLimit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: ev => setFiles(ev.target.files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      value: content,\n      onChange: setContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: '5px'\n      },\n      children: \"Create post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePost, \"dgyyLwXku/v/UNI0MQCR1Q3VqVQ=\");\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["useState","Navigate","Editor","jsxDEV","_jsxDEV","CreatePost","_s","title","setTitle","summary","setSummary","content","setContent","files","setFiles","redirect","setRedirect","handleSummaryChange","ev","inputSummary","target","value","wordCount","split","length","createNewPost","data","FormData","set","preventDefault","response","fetch","method","body","credentials","ok","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","children","type","placeholder","onChange","className","rows","required","countWords","wordLimit","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/surendra puri/OneDrive/Documents/Desktop/AnalyzedByIITIANS/client/src/pages/CreatePost.js"],"sourcesContent":["import 'react-quill/dist/quill.snow.css';\r\nimport { useState } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport Editor from \"../components/Editor\";\r\n\r\nexport default function CreatePost() {\r\n  const [title, setTitle] = useState('');\r\n  const [summary, setSummary] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [files, setFiles] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  // Handle summary word count\r\n  const handleSummaryChange = (ev) => {\r\n    const inputSummary = ev.target.value;\r\n    const wordCount = inputSummary.split(/\\s+/).length;\r\n    if (wordCount <= 100) { // Limit to 100 words\r\n      setSummary(inputSummary);\r\n    }\r\n  };\r\n\r\n  async function createNewPost(ev) {\r\n    const data = new FormData();\r\n    data.set('title', title);\r\n    data.set('summary', summary);\r\n    data.set('content', content);\r\n    data.set('file', files[0]);\r\n    ev.preventDefault();\r\n\r\n    const response = await fetch('http://localhost:8081/post', {\r\n      method: 'POST',\r\n      body: data,\r\n      credentials: 'include',\r\n    });\r\n\r\n    if (response.ok) {\r\n      setRedirect(true);\r\n    }\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Navigate to={'/'} />;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={createNewPost}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChange={(ev) => setTitle(ev.target.value)}\r\n      />\r\n      <div className=\"textarea-container custom-margin\">\r\n  <textarea\r\n    placeholder=\"Summary\"\r\n    value={summary}\r\n    onChange={handleSummaryChange}\r\n    rows=\"3\"\r\n    required\r\n    className=\"summary-textarea\"\r\n  ></textarea>\r\n  <p className=\"word-count\">\r\n    Word Count: {countWords(summary)} / {wordLimit}\r\n  </p>\r\n</div>\r\n\r\n\r\n      <input\r\n        type=\"file\"\r\n        onChange={(ev) => setFiles(ev.target.files)}\r\n      />\r\n      <Editor value={content} onChange={setContent} />\r\n      <button style={{ marginTop: '5px' }}>Create post</button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}