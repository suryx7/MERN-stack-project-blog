{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surendra puri\\\\OneDrive\\\\Documents\\\\Desktop\\\\AnalyzedByIITIANS\\\\client\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link, redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Function to validate strong password\n  const isStrongPassword = password => {\n    const strongPasswordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    return strongPasswordRegex.test(password);\n  };\n\n  // Function to validate strong username (no spaces allowed)\n  const isStrongUsername = username => {\n    const strongUsernameRegex = /^[A-Za-z0-9]{3,}$/; // No spaces, alphanumeric, 3+ characters\n    return strongUsernameRegex.test(username);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isStrongUsername(username)) {\n      setError(\"Username must be at least 3 characters long, contain only alphanumeric characters, and cannot have spaces.\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match!\");\n      return;\n    }\n    if (!isStrongPassword(password)) {\n      setError(\"Password must be at least 8 characters long, contain an uppercase letter, a lowercase letter, a number, and a special character.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:4050/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        alert(\"Registration successful!\");\n        return redirect('/login');\n      } else {\n        const data = await response.json();\n        setError(data.error || \"Registration failed!\");\n      }\n    } catch (err) {\n      setError(\"An error occurred during registration.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"register\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"link\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"I have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"9krVY4d52aNvqxoBwQ6spRRWesc=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","Link","redirect","jsxDEV","_jsxDEV","Register","_s","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","isStrongPassword","strongPasswordRegex","test","isStrongUsername","strongUsernameRegex","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","alert","data","json","err","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","to","style","color","_c","$RefreshReg$"],"sources":["C:/Users/surendra puri/OneDrive/Documents/Desktop/AnalyzedByIITIANS/client/src/pages/RegisterPage.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Link, redirect } from \"react-router-dom\";\r\n\r\nexport default function Register() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Function to validate strong password\r\n  const isStrongPassword = (password) => {\r\n    const strongPasswordRegex =\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n    return strongPasswordRegex.test(password);\r\n  };\r\n\r\n  // Function to validate strong username (no spaces allowed)\r\n  const isStrongUsername = (username) => {\r\n    const strongUsernameRegex = /^[A-Za-z0-9]{3,}$/; // No spaces, alphanumeric, 3+ characters\r\n    return strongUsernameRegex.test(username);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!isStrongUsername(username)) {\r\n      setError(\"Username must be at least 3 characters long, contain only alphanumeric characters, and cannot have spaces.\");\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match!\");\r\n      return;\r\n    }\r\n\r\n    if (!isStrongPassword(password)) {\r\n      setError(\r\n        \"Password must be at least 8 characters long, contain an uppercase letter, a lowercase letter, a number, and a special character.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:4050/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ username, email, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Registration successful!\");\r\n        return redirect('/login');\r\n      } else {\r\n        const data = await response.json();\r\n        setError(data.error || \"Registration failed!\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"An error occurred during registration.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"register\" onSubmit={handleSubmit}>\r\n      <h1>Register</h1>\r\n      \r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Confirm Password\"\r\n        value={confirmPassword}\r\n        onChange={(e) => setConfirmPassword(e.target.value)}\r\n        required\r\n      />\r\n      <button type=\"submit\">Register</button>\r\n      <p className=\"link\">\r\n        <Link to=\"/login\">I have an account?</Link>\r\n      </p>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}