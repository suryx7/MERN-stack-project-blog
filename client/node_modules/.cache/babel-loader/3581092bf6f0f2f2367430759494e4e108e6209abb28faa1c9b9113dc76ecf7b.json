{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surendra puri\\\\OneDrive\\\\Documents\\\\Desktop\\\\AnalyzedByIITIANS\\\\client\\\\src\\\\pages\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport 'react-quill/dist/quill.snow.css';\nimport { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport Editor from \"../components/Editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePost() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [files, setFiles] = useState(null);\n  const [logofile, setLogofile] = useState(null);\n  const [courseOwner, setCourseOwner] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  const wordLimit = 100;\n  const countWords = text => text.trim().split(/\\s+/).length;\n  const handleSummaryChange = ev => {\n    const newSummary = ev.target.value;\n    if (countWords(newSummary) <= wordLimit) {\n      setSummary(newSummary);\n    }\n  };\n  async function createNewPost(ev) {\n    ev.preventDefault();\n    if (!files) {\n      alert('Please upload both the course file and logo.');\n      return;\n    }\n    const data = new FormData();\n    data.set('title', title);\n    data.set('courseOwner', courseOwner);\n    data.set('summary', summary);\n    data.set('content', content);\n    data.append('file', files[0]);\n    data.append('logofile', logofile[0]);\n    if (logofile) {\n      data.set('logofile', logofile);\n    } else {\n      data.set('logofile', \"default-logo.png\");\n    }\n    const response = await fetch('http://localhost:4050/post', {\n      method: 'POST',\n      body: data,\n      credentials: 'include'\n    });\n    if (response.ok) {\n      setRedirect(true);\n    } else {\n      alert('Failed to create post. Please try again.');\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"createPost\",\n    onSubmit: createNewPost,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: ev => setTitle(ev.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: ev => setLogofile(ev.target.files),\n      accept: \"image/*\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Course Owner\",\n      value: courseOwner,\n      onChange: ev => setCourseOwner(ev.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Summary\",\n      value: summary,\n      onChange: handleSummaryChange,\n      rows: \"3\",\n      required: true,\n      className: \"summary-textarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"word-count\",\n      children: [\"Word Count: \", countWords(summary), \" / \", wordLimit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: ev => setFiles(ev.target.files),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      value: content,\n      onChange: setContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: '5px'\n      },\n      children: \"Add Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePost, \"nBZD5dYYZ4b4ozjVZeWCfDPCdmI=\");\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["useState","Navigate","Editor","jsxDEV","_jsxDEV","CreatePost","_s","title","setTitle","summary","setSummary","content","setContent","files","setFiles","logofile","setLogofile","courseOwner","setCourseOwner","redirect","setRedirect","wordLimit","countWords","text","trim","split","length","handleSummaryChange","ev","newSummary","target","value","createNewPost","preventDefault","alert","data","FormData","set","append","response","fetch","method","body","credentials","ok","to","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","children","type","placeholder","onChange","required","accept","rows","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/surendra puri/OneDrive/Documents/Desktop/AnalyzedByIITIANS/client/src/pages/CreatePost.js"],"sourcesContent":["import 'react-quill/dist/quill.snow.css';\r\nimport { useState } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport Editor from \"../components/Editor\";\r\n\r\nexport default function CreatePost() {\r\n  const [title, setTitle] = useState('');\r\n  const [summary, setSummary] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [files, setFiles] = useState(null);\r\n  const [logofile, setLogofile] = useState(null);\r\n  const [courseOwner, setCourseOwner] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const wordLimit = 100;\r\n\r\n  const countWords = (text) => text.trim().split(/\\s+/).length;\r\n\r\n  const handleSummaryChange = (ev) => {\r\n    const newSummary = ev.target.value;\r\n    if (countWords(newSummary) <= wordLimit) {\r\n      setSummary(newSummary);\r\n    }\r\n  };\r\n\r\n  async function createNewPost(ev) {\r\n    ev.preventDefault();\r\n    \r\n    if (!files) {\r\n      alert('Please upload both the course file and logo.');\r\n      return;\r\n    }\r\n\r\n    const data = new FormData();\r\n    data.set('title', title);\r\n    data.set('courseOwner', courseOwner);\r\n    data.set('summary', summary);\r\n    data.set('content', content);\r\n    data.append('file', files[0]);\r\n    data.append('logofile', logofile[0]);\r\n\r\n    if (logofile) {\r\n      data.set('logofile', logofile);\r\n    } else {\r\n      data.set('logofile', \"default-logo.png\"); \r\n    }\r\n    \r\n    const response = await fetch('http://localhost:4050/post', {\r\n      method: 'POST',\r\n      body: data,\r\n      credentials: 'include',\r\n    });\r\n\r\n    if (response.ok) {\r\n      setRedirect(true);\r\n    } else {\r\n      alert('Failed to create post. Please try again.');\r\n    }\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <form className=\"createPost\" onSubmit={createNewPost}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChange={(ev) => setTitle(ev.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        onChange={(ev) => setLogofile(ev.target.files)}\r\n        accept=\"image/*\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Course Owner\"\r\n        value={courseOwner}\r\n        onChange={(ev) => setCourseOwner(ev.target.value)}\r\n        required\r\n      />\r\n      <textarea\r\n        placeholder=\"Summary\"\r\n        value={summary}\r\n        onChange={handleSummaryChange}\r\n        rows=\"3\"\r\n        required\r\n        className=\"summary-textarea\"\r\n      />\r\n    <p className=\"word-count\">\r\n      Word Count: {countWords(summary)} / {wordLimit}\r\n    </p>\r\n\r\n      <input\r\n        type=\"file\"\r\n        onChange={(ev) => setFiles(ev.target.files)}\r\n        required\r\n      />\r\n      <Editor value={content} onChange={setContent} />\r\n      <button style={{ marginTop: '5px' }}>Add Course</button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}