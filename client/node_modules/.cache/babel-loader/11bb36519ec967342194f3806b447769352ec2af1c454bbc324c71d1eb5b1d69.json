{"ast":null,"code":"// import { format } from \"date-fns\";\n// import { useState, useEffect } from \"react\";\n// import { Link, useLocation } from \"react-router-dom\";\n\n// export default function SearchHandlingPage() {\n//   const [searchResults, setSearchResults] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(\"\");\n\n//   const location = useLocation();\n//   const queryParams = new URLSearchParams(location.search);\n//   const query = queryParams.get(\"query\");\n\n//   useEffect(() => {\n//     if (query) {\n//       handleSearch(query);\n//     }\n//   }, [query]);\n\n//   const handleSearch = async (query) => {\n//     if (!query) return;\n\n//     setLoading(true);\n//     setError(\"\");\n//     setSearchResults([]);\n\n//     try {\n//       const response = await fetch(`http://localhost:4050/search?query=${query}`);\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch search results\");\n//       }\n//       const results = await response.json();\n//       setSearchResults(results);\n//     } catch (err) {\n//       console.error(\"Search error:\", err);\n//       setError(\"Something went wrong. Please try again later.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1 className=\"searchResult\">Search Results</h1>\n\n//       {loading && <h2 className=\"searchResult loading\">Loading...</h2>}\n//       {error && <p className=\"error\">{error}</p>}\n\n//       <div className=\"search-results\">\n//         {searchResults.length > 0 ? (\n//           // searchResults.map((post) => (\n//           //   <div className=\"post\" key={post._id}>\n//           //     {post.cover && (\n//           //       <div className=\"image\">\n//           //         <Link to={`/post/${post._id}`}>\n//           //           <img\n//           //             src={`http://localhost:4050/${post.cover}`} \n//           //             alt={post.title || \"Post cover\"}\n//           //             loading=\"lazy\"\n//           //             onError={(e) => (e.target.style.display = \"none\")} // Hide broken images\n//           //           />\n//           //         </Link>\n//           //       </div>\n//           //     )}\n\n//           //     <div className=\"texts\">\n//           //       <Link to={`/post/${post._id}`}>\n//           //         <h2>{post.title}</h2>\n//           //       </Link>\n\n//           //       <p className=\"info\">\n//           //         <span className=\"courseOwner\">{post.courseOwner || \"No Course Owner\"}</span>\n//           //         <time>\n//           //           {post.createdAt\n//           //             ? format(new Date(post.createdAt))\n//           //             : \"Unknown date\"}\n//           //         </time>\n//           //       </p>\n//           //       <p className=\"summary\">{post.summary}</p>\n//           //     </div>\n//           //   </div>\n//           // ))\n\n//         ) : (\n//           !loading &&\n//           !error && (\n//             <h2 className=\"searchResult no-results\">\n//               No results found. Please try a different search.\n//             </h2>\n//           )\n//         )}\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/surendra puri/OneDrive/Documents/Desktop/AnalyzedByIITIANS/client/src/pages/searchPage.js"],"sourcesContent":["// import { format } from \"date-fns\";\r\n// import { useState, useEffect } from \"react\";\r\n// import { Link, useLocation } from \"react-router-dom\";\r\n\r\n// export default function SearchHandlingPage() {\r\n//   const [searchResults, setSearchResults] = useState([]);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const location = useLocation();\r\n//   const queryParams = new URLSearchParams(location.search);\r\n//   const query = queryParams.get(\"query\");\r\n\r\n//   useEffect(() => {\r\n//     if (query) {\r\n//       handleSearch(query);\r\n//     }\r\n//   }, [query]);\r\n\r\n//   const handleSearch = async (query) => {\r\n//     if (!query) return;\r\n\r\n//     setLoading(true);\r\n//     setError(\"\");\r\n//     setSearchResults([]);\r\n\r\n//     try {\r\n//       const response = await fetch(`http://localhost:4050/search?query=${query}`);\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Failed to fetch search results\");\r\n//       }\r\n//       const results = await response.json();\r\n//       setSearchResults(results);\r\n//     } catch (err) {\r\n//       console.error(\"Search error:\", err);\r\n//       setError(\"Something went wrong. Please try again later.\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1 className=\"searchResult\">Search Results</h1>\r\n\r\n//       {loading && <h2 className=\"searchResult loading\">Loading...</h2>}\r\n//       {error && <p className=\"error\">{error}</p>}\r\n\r\n//       <div className=\"search-results\">\r\n//         {searchResults.length > 0 ? (\r\n//           // searchResults.map((post) => (\r\n//           //   <div className=\"post\" key={post._id}>\r\n//           //     {post.cover && (\r\n//           //       <div className=\"image\">\r\n//           //         <Link to={`/post/${post._id}`}>\r\n//           //           <img\r\n//           //             src={`http://localhost:4050/${post.cover}`} \r\n//           //             alt={post.title || \"Post cover\"}\r\n//           //             loading=\"lazy\"\r\n//           //             onError={(e) => (e.target.style.display = \"none\")} // Hide broken images\r\n//           //           />\r\n//           //         </Link>\r\n//           //       </div>\r\n//           //     )}\r\n\r\n//           //     <div className=\"texts\">\r\n//           //       <Link to={`/post/${post._id}`}>\r\n//           //         <h2>{post.title}</h2>\r\n//           //       </Link>\r\n\r\n//           //       <p className=\"info\">\r\n//           //         <span className=\"courseOwner\">{post.courseOwner || \"No Course Owner\"}</span>\r\n//           //         <time>\r\n//           //           {post.createdAt\r\n//           //             ? format(new Date(post.createdAt))\r\n//           //             : \"Unknown date\"}\r\n//           //         </time>\r\n//           //       </p>\r\n//           //       <p className=\"summary\">{post.summary}</p>\r\n//           //     </div>\r\n//           //   </div>\r\n//           // ))\r\n\r\n//         ) : (\r\n//           !loading &&\r\n//           !error && (\r\n//             <h2 className=\"searchResult no-results\">\r\n//               No results found. Please try a different search.\r\n//             </h2>\r\n//           )\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}