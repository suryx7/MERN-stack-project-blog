{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surendra puri\\\\OneDrive\\\\Documents\\\\Desktop\\\\AnalyzedByIITIANS\\\\client\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { UserContext } from \"../components/UserContext\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  const [error, setError] = useState('');\n  const {\n    setUserInfo\n  } = useContext(UserContext);\n  async function login(ev) {\n    ev.preventDefault();\n\n    // Check if username has spaces\n    if (/\\s/.test(username)) {\n      setError('Username cannot contain spaces');\n      return;\n    } else {\n      setError(''); // Clear error if no spaces\n    }\n    const response = await fetch('http://localhost:4050/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    });\n    if (response.ok) {\n      response.json().then(userInfo => {\n        setUserInfo(userInfo);\n        setRedirect(true);\n      });\n    } else {\n      alert('Wrong credentials');\n    }\n  }\n  function handleGoogleLogin() {\n    // Redirect to Google OAuth endpoint\n    window.location.href = 'http://localhost:4050/auth/google';\n  }\n  function handleFacebookLogin() {\n    // Redirect to Facebook OAuth endpoint\n    window.location.href = 'http://localhost:4050/auth/facebook';\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login\",\n    onSubmit: login,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username or Email\",\n      value: username,\n      onChange: ev => setUsername(ev.target.value.trim()) // Trimming spaces\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: ev => setPassword(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"link\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgot\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/forgot-password\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"I Don't have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"oauth-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleGoogleLogin,\n        className: \"google-login\",\n        children: \"Login with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleFacebookLogin,\n        className: \"facebook-login\",\n        children: \"Login with Facebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"gL/RwIRsjjTOKMeejg5rifbjZCo=\");\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useContext","useState","Navigate","UserContext","Link","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","redirect","setRedirect","error","setError","setUserInfo","login","ev","preventDefault","test","response","fetch","method","body","JSON","stringify","headers","credentials","ok","json","then","userInfo","alert","handleGoogleLogin","window","location","href","handleFacebookLogin","to","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","children","style","color","type","placeholder","value","onChange","target","trim","onClick","_c","$RefreshReg$"],"sources":["C:/Users/surendra puri/OneDrive/Documents/Desktop/AnalyzedByIITIANS/client/src/pages/LoginPage.js"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { UserContext } from \"../components/UserContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function LoginPage() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const { setUserInfo } = useContext(UserContext);\r\n\r\n  async function login(ev) {\r\n    ev.preventDefault();\r\n\r\n    // Check if username has spaces\r\n    if (/\\s/.test(username)) {\r\n      setError('Username cannot contain spaces');\r\n      return;\r\n    } else {\r\n      setError(''); // Clear error if no spaces\r\n    }\r\n\r\n    const response = await fetch('http://localhost:4050/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ username, password }),\r\n      headers: { 'Content-Type': 'application/json' },\r\n      credentials: 'include',\r\n    });\r\n\r\n    if (response.ok) {\r\n      response.json().then(userInfo => {\r\n        setUserInfo(userInfo);\r\n        setRedirect(true);\r\n      });\r\n    } else {\r\n      alert('Wrong credentials');\r\n    }\r\n  }\r\n\r\n  function handleGoogleLogin() {\r\n    // Redirect to Google OAuth endpoint\r\n    window.location.href = 'http://localhost:4050/auth/google';\r\n  }\r\n\r\n  function handleFacebookLogin() {\r\n    // Redirect to Facebook OAuth endpoint\r\n    window.location.href = 'http://localhost:4050/auth/facebook';\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Navigate to={'/'} />;\r\n  }\r\n\r\n  return (\r\n    <form className=\"login\" onSubmit={login}>\r\n      <h1>Login</h1>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>} {/* Display error message */}\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Username or Email\" \r\n        value={username} \r\n        onChange={ev => setUsername(ev.target.value.trim())} // Trimming spaces\r\n      />\r\n      <input \r\n        type=\"password\" \r\n        placeholder=\"Password\" \r\n        value={password} \r\n        onChange={ev => setPassword(ev.target.value)} \r\n      />\r\n      <button>Login</button>\r\n\r\n      <p className=\"link\">\r\n        <div className=\"forgot\">\r\n          <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n        </div>\r\n        <Link to=\"/register\">I Don't have an account?</Link>\r\n      </p>\r\n      <div className=\"oauth-buttons\">\r\n        <button type=\"button\" onClick={handleGoogleLogin} className=\"google-login\">\r\n          Login with Google\r\n        </button>\r\n        <button type=\"button\" onClick={handleFacebookLogin} className=\"facebook-login\">\r\n          Login with Facebook\r\n        </button>\r\n      </div>\r\n\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEgB;EAAY,CAAC,GAAGjB,UAAU,CAACG,WAAW,CAAC;EAE/C,eAAee,KAAKA,CAACC,EAAE,EAAE;IACvBA,EAAE,CAACC,cAAc,CAAC,CAAC;;IAEnB;IACA,IAAI,IAAI,CAACC,IAAI,CAACZ,QAAQ,CAAC,EAAE;MACvBO,QAAQ,CAAC,gCAAgC,CAAC;MAC1C;IACF,CAAC,MAAM;MACLA,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB;IAEA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAElB,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAC5CiB,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,IAAIP,QAAQ,CAACQ,EAAE,EAAE;MACfR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;QAC/BhB,WAAW,CAACgB,QAAQ,CAAC;QACrBnB,WAAW,CAAC,IAAI,CAAC;MACnB,CAAC,CAAC;IACJ,CAAC,MAAM;MACLoB,KAAK,CAAC,mBAAmB,CAAC;IAC5B;EACF;EAEA,SAASC,iBAAiBA,CAAA,EAAG;IAC3B;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,mCAAmC;EAC5D;EAEA,SAASC,mBAAmBA,CAAA,EAAG;IAC7B;IACAH,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,qCAAqC;EAC9D;EAEA,IAAIzB,QAAQ,EAAE;IACZ,oBAAOP,OAAA,CAACJ,QAAQ;MAACsC,EAAE,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9B;EAEA,oBACEtC,OAAA;IAAMuC,SAAS,EAAC,OAAO;IAACC,QAAQ,EAAE5B,KAAM;IAAA6B,QAAA,gBACtCzC,OAAA;MAAAyC,QAAA,EAAI;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACb7B,KAAK,iBAAIT,OAAA;MAAG0C,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAF,QAAA,EAAEhC;IAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC,eACnDtC,OAAA;MACE4C,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,mBAAmB;MAC/BC,KAAK,EAAE3C,QAAS;MAChB4C,QAAQ,EAAElC,EAAE,IAAIT,WAAW,CAACS,EAAE,CAACmC,MAAM,CAACF,KAAK,CAACG,IAAI,CAAC,CAAC,CAAE,CAAC;IAAA;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eACFtC,OAAA;MACE4C,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEzC,QAAS;MAChB0C,QAAQ,EAAElC,EAAE,IAAIP,WAAW,CAACO,EAAE,CAACmC,MAAM,CAACF,KAAK;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFtC,OAAA;MAAAyC,QAAA,EAAQ;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEtBtC,OAAA;MAAGuC,SAAS,EAAC,MAAM;MAAAE,QAAA,gBACjBzC,OAAA;QAAKuC,SAAS,EAAC,QAAQ;QAAAE,QAAA,eACrBzC,OAAA,CAACF,IAAI;UAACoC,EAAE,EAAC,kBAAkB;UAAAO,QAAA,EAAC;QAAgB;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACNtC,OAAA,CAACF,IAAI;QAACoC,EAAE,EAAC,WAAW;QAAAO,QAAA,EAAC;MAAwB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACJtC,OAAA;MAAKuC,SAAS,EAAC,eAAe;MAAAE,QAAA,gBAC5BzC,OAAA;QAAQ4C,IAAI,EAAC,QAAQ;QAACM,OAAO,EAAErB,iBAAkB;QAACU,SAAS,EAAC,cAAc;QAAAE,QAAA,EAAC;MAE3E;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtC,OAAA;QAAQ4C,IAAI,EAAC,QAAQ;QAACM,OAAO,EAAEjB,mBAAoB;QAACM,SAAS,EAAC,gBAAgB;QAAAE,QAAA,EAAC;MAE/E;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAEX;AAACpC,EAAA,CApFuBD,SAAS;AAAAkD,EAAA,GAATlD,SAAS;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}