{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surendra puri\\\\OneDrive\\\\Documents\\\\Desktop\\\\AnalyzedByIITIANS\\\\client\\\\src\\\\pages\\\\commentPage.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { UserContext } from \"../components/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentPage() {\n  _s();\n  const {\n    id\n  } = useParams(); // Post ID from the URL\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const {\n    userInfo\n  } = useContext(UserContext);\n  useEffect(() => {\n    // Fetch comments for the specific post\n    fetch(`http://localhost:4050/post/${id}/comments`).then(response => response.json()).then(data => setComments(data));\n  }, [id]);\n  async function addComment() {\n    if (!newComment.trim()) {\n      alert(\"Comment cannot be empty.\");\n      return;\n    }\n    const response = await fetch(`http://localhost:4050/post/${id}/comments`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        text: newComment\n      })\n    });\n    if (response.ok) {\n      const addedComment = await response.json();\n      setComments([...comments, addedComment]); // Add the new comment to the state\n      setNewComment(\"\"); // Clear the input field\n    } else {\n      alert(\"Failed to add comment.\");\n    }\n  }\n  async function deleteComment(commentId) {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this comment?\");\n    if (!confirmDelete) return;\n    const response = await fetch(`http://localhost:4050/post/${id}/comments/${commentId}`, {\n      method: \"DELETE\",\n      credentials: \"include\"\n    });\n    if (response.ok) {\n      setComments(comments.filter(comment => comment._id !== commentId)); // Remove the deleted comment\n    } else {\n      alert(\"Failed to delete comment.\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write a comment...\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addComment,\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"@\", comment.author.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: new Date(comment.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), userInfo.id === comment.author._id && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: () => deleteComment(comment._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentPage, \"8EYZMhGkeWvkSqLmDzYamTuBNIg=\", false, function () {\n  return [useParams];\n});\n_c = CommentPage;\nvar _c;\n$RefreshReg$(_c, \"CommentPage\");","map":{"version":3,"names":["useContext","useEffect","useState","useParams","UserContext","jsxDEV","_jsxDEV","CommentPage","_s","id","comments","setComments","newComment","setNewComment","userInfo","fetch","then","response","json","data","addComment","trim","alert","method","headers","credentials","body","JSON","stringify","text","ok","addedComment","deleteComment","commentId","confirmDelete","window","confirm","filter","comment","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","map","author","username","Date","createdAt","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/surendra puri/OneDrive/Documents/Desktop/AnalyzedByIITIANS/client/src/pages/commentPage.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { UserContext } from \"../components/UserContext\";\r\n\r\nexport default function CommentPage() {\r\n  const { id } = useParams(); // Post ID from the URL\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const { userInfo } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    // Fetch comments for the specific post\r\n    fetch(`http://localhost:4050/post/${id}/comments`)\r\n      .then((response) => response.json())\r\n      .then((data) => setComments(data));\r\n  }, [id]);\r\n\r\n  async function addComment() {\r\n    if (!newComment.trim()) {\r\n      alert(\"Comment cannot be empty.\");\r\n      return;\r\n    }\r\n\r\n    const response = await fetch(`http://localhost:4050/post/${id}/comments`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ text: newComment }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const addedComment = await response.json();\r\n      setComments([...comments, addedComment]); // Add the new comment to the state\r\n      setNewComment(\"\"); // Clear the input field\r\n    } else {\r\n      alert(\"Failed to add comment.\");\r\n    }\r\n  }\r\n\r\n  async function deleteComment(commentId) {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this comment?\");\r\n    if (!confirmDelete) return;\r\n\r\n    const response = await fetch(`http://localhost:4050/post/${id}/comments/${commentId}`, {\r\n      method: \"DELETE\",\r\n      credentials: \"include\",\r\n    });\r\n\r\n    if (response.ok) {\r\n      setComments(comments.filter((comment) => comment._id !== commentId)); // Remove the deleted comment\r\n    } else {\r\n      alert(\"Failed to delete comment.\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"comment-section\">\r\n      <h2>Comments</h2>\r\n      <div className=\"comment-input\">\r\n        <textarea\r\n          placeholder=\"Write a comment...\"\r\n          value={newComment}\r\n          onChange={(e) => setNewComment(e.target.value)}\r\n        ></textarea>\r\n        <button onClick={addComment}>Add Comment</button>\r\n      </div>\r\n      <div className=\"comments-list\">\r\n        {comments.map((comment) => (\r\n          <div key={comment._id} className=\"comment-item\">\r\n            <div className=\"comment-header\">\r\n              <strong>@{comment.author.username}</strong>{\" \"}\r\n              <small>{new Date(comment.createdAt).toLocaleString()}</small>\r\n            </div>\r\n            <p>{comment.text}</p>\r\n            {userInfo.id === comment.author._id && (\r\n              <button className=\"delete-btn\" onClick={() => deleteComment(comment._id)}>\r\n                Delete\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}