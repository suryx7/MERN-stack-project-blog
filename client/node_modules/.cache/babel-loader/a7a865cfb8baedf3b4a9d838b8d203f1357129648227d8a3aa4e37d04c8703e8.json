{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surendra puri\\\\OneDrive\\\\Documents\\\\Desktop\\\\AnalyzedByIITIANS\\\\client\\\\src\\\\pages\\\\commentPage.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { UserContext } from \"../components/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentPage() {\n  _s();\n  const {\n    id\n  } = useParams(); // Post ID from the URL\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const [rating, setRating] = useState(0); // For setting a new rating\n  const {\n    userInfo\n  } = useContext(UserContext);\n  useEffect(() => {\n    // Fetch comments for the specific post\n    fetch(`http://localhost:4050/post/${id}/comments`).then(response => response.json()).then(data => setComments(data));\n  }, [id]);\n  async function handleCommentAndRating() {\n    if (!newComment.trim()) {\n      alert(\"Comment cannot be empty.\");\n      return;\n    }\n    if (rating === 0) {\n      alert(\"Please provide a rating.\");\n      return;\n    }\n    const response = await fetch(`http://localhost:4050/post/${id}/comments`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        text: newComment,\n        rating\n      })\n    });\n    if (response.ok) {\n      const addedComment = await response.json();\n      setComments([...comments, addedComment]); // Add the new comment to the state\n      setNewComment(\"\"); // Clear the input field\n      setRating(0); // Reset rating\n    } else {\n      alert(\"Failed to add comment and rating.\");\n    }\n  }\n  async function deleteComment(commentId) {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this comment?\");\n    if (!confirmDelete) return;\n    const response = await fetch(`http://localhost:4050/post/${id}/comments/${commentId}`, {\n      method: \"DELETE\",\n      credentials: \"include\"\n    });\n    if (response.ok) {\n      setComments(comments.filter(comment => comment._id !== commentId)); // Remove the deleted comment\n    } else {\n      alert(\"Failed to delete comment.\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"post-title\",\n      children: \"Post Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Your Comment and Rating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Write a comment...\",\n          value: newComment,\n          onChange: e => setNewComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Rate: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRating(star),\n            className: star <= rating ? \"active-star\" : \"\",\n            children: \"\\u2605\"\n          }, star, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCommentAndRating,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-list\",\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"@\", comment.author.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n              children: new Date(comment.createdAt).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-display\",\n            children: [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: star <= comment.rating ? \"filled-star\" : \"empty-star\",\n              children: \"\\u2605\"\n            }, star, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), userInfo.id === comment.author._id && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: () => deleteComment(comment._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)]\n        }, comment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentPage, \"XVEfzcWYUgkDRywGRxpUNkkAW0A=\", false, function () {\n  return [useParams];\n});\n_c = CommentPage;\nvar _c;\n$RefreshReg$(_c, \"CommentPage\");","map":{"version":3,"names":["useContext","useEffect","useState","useParams","UserContext","jsxDEV","_jsxDEV","CommentPage","_s","id","comments","setComments","newComment","setNewComment","rating","setRating","userInfo","fetch","then","response","json","data","handleCommentAndRating","trim","alert","method","headers","credentials","body","JSON","stringify","text","ok","addedComment","deleteComment","commentId","confirmDelete","window","confirm","filter","comment","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","map","star","onClick","author","username","Date","createdAt","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/surendra puri/OneDrive/Documents/Desktop/AnalyzedByIITIANS/client/src/pages/commentPage.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { UserContext } from \"../components/UserContext\";\r\n\r\nexport default function CommentPage() {\r\n  const { id } = useParams(); // Post ID from the URL\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const [rating, setRating] = useState(0); // For setting a new rating\r\n  const { userInfo } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    // Fetch comments for the specific post\r\n    fetch(`http://localhost:4050/post/${id}/comments`)\r\n      .then((response) => response.json())\r\n      .then((data) => setComments(data));\r\n  }, [id]);\r\n\r\n  async function handleCommentAndRating() {\r\n    if (!newComment.trim()) {\r\n      alert(\"Comment cannot be empty.\");\r\n      return;\r\n    }\r\n    if (rating === 0) {\r\n      alert(\"Please provide a rating.\");\r\n      return;\r\n    }\r\n\r\n    const response = await fetch(`http://localhost:4050/post/${id}/comments`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ text: newComment, rating }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const addedComment = await response.json();\r\n      setComments([...comments, addedComment]); // Add the new comment to the state\r\n      setNewComment(\"\"); // Clear the input field\r\n      setRating(0); // Reset rating\r\n    } else {\r\n      alert(\"Failed to add comment and rating.\");\r\n    }\r\n  }\r\n\r\n  async function deleteComment(commentId) {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this comment?\");\r\n    if (!confirmDelete) return;\r\n\r\n    const response = await fetch(`http://localhost:4050/post/${id}/comments/${commentId}`, {\r\n      method: \"DELETE\",\r\n      credentials: \"include\",\r\n    });\r\n\r\n    if (response.ok) {\r\n      setComments(comments.filter((comment) => comment._id !== commentId)); // Remove the deleted comment\r\n    } else {\r\n      alert(\"Failed to delete comment.\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"post-page\">\r\n      <h1 className=\"post-title\">Post Comments</h1>\r\n      <div className=\"comment-section\">\r\n        <h2>Add Your Comment and Rating</h2>\r\n        <div className=\"comment-input\">\r\n          <textarea\r\n            placeholder=\"Write a comment...\"\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n          ></textarea>\r\n          <div className=\"rating-input\">\r\n            <span>Rate: </span>\r\n            {[1, 2, 3, 4, 5].map((star) => (\r\n              <button\r\n                key={star}\r\n                onClick={() => setRating(star)}\r\n                className={star <= rating ? \"active-star\" : \"\"}\r\n              >\r\n                ★\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <button onClick={handleCommentAndRating}>Submit</button>\r\n        </div>\r\n        <h2>Comments</h2>\r\n        <div className=\"comments-list\">\r\n          {comments.map((comment) => (\r\n            <div key={comment._id} className=\"comment-item\">\r\n              <div className=\"comment-header\">\r\n                <strong>@{comment.author.username}</strong>{\" \"}\r\n                <small>{new Date(comment.createdAt).toLocaleString()}</small>\r\n              </div>\r\n              <p>{comment.text}</p>\r\n              <div className=\"rating-display\">\r\n                {[1, 2, 3, 4, 5].map((star) => (\r\n                  <span key={star} className={star <= comment.rating ? \"filled-star\" : \"empty-star\"}>\r\n                    ★\r\n                  </span>\r\n                ))}\r\n              </div>\r\n              {userInfo.id === comment.author._id && (\r\n                <button className=\"delete-btn\" onClick={() => deleteComment(comment._id)}>\r\n                  Delete\r\n                </button>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}