{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surendra puri\\\\OneDrive\\\\Documents\\\\Desktop\\\\AnalyzedByIITIANS\\\\client\\\\src\\\\pages\\\\commentPage.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { UserContext } from \"../components/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentPage() {\n  _s();\n  const {\n    id\n  } = useParams(); // Post ID from the URL\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const {\n    userInfo\n  } = useContext(UserContext);\n  useEffect(() => {\n    // Fetch comments for the specific post\n    fetch(`http://localhost:4050/post/${id}/comments`).then(response => response.json()).then(data => setComments(data));\n  }, [id]);\n  async function addComment() {\n    if (!newComment.trim()) {\n      alert(\"Comment cannot be empty.\");\n      return;\n    }\n    const response = await fetch(`http://localhost:4050/post/${id}/comments`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        text: newComment\n      })\n    });\n    if (response.ok) {\n      const addedComment = await response.json();\n      setComments([...comments, addedComment]); // Add the new comment to the state\n      setNewComment(\"\"); // Clear the input field\n    } else {\n      alert(\"Failed to add comment.\");\n    }\n  }\n  async function deleteComment(commentId) {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this comment?\");\n    if (!confirmDelete) return;\n    const response = await fetch(`http://localhost:4050/post/${id}/comments/${commentId}`, {\n      method: \"DELETE\",\n      credentials: \"include\"\n    });\n    if (response.ok) {\n      setComments(comments.filter(comment => comment._id !== commentId)); // Remove the deleted comment\n    } else {\n      alert(\"Failed to delete comment.\");\n    }\n  }\n  async function addRating(commentId, rating) {\n    const response = await fetch(`http://localhost:4050/post/${id}/comments/${commentId}/rate`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        rating\n      })\n    });\n    if (response.ok) {\n      const updatedComment = await response.json();\n      setComments(comments.map(comment => comment._id === commentId ? updatedComment : comment)); // Update the rated comment\n    } else {\n      alert(\"Failed to rate the comment.\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write a comment...\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addComment,\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"@\", comment.author.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            children: new Date(comment.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Rate: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addRating(comment._id, star),\n            className: star <= (comment.rating || 0) ? \"active-star\" : \"\",\n            children: \"\\u2605\"\n          }, star, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"(\", comment.rating || 0, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), userInfo.id === comment.author._id && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: () => deleteComment(comment._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentPage, \"8EYZMhGkeWvkSqLmDzYamTuBNIg=\", false, function () {\n  return [useParams];\n});\n_c = CommentPage;\nvar _c;\n$RefreshReg$(_c, \"CommentPage\");","map":{"version":3,"names":["useContext","useEffect","useState","useParams","UserContext","jsxDEV","_jsxDEV","CommentPage","_s","id","comments","setComments","newComment","setNewComment","userInfo","fetch","then","response","json","data","addComment","trim","alert","method","headers","credentials","body","JSON","stringify","text","ok","addedComment","deleteComment","commentId","confirmDelete","window","confirm","filter","comment","_id","addRating","rating","updatedComment","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","author","username","Date","createdAt","toLocaleString","star","_c","$RefreshReg$"],"sources":["C:/Users/surendra puri/OneDrive/Documents/Desktop/AnalyzedByIITIANS/client/src/pages/commentPage.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { UserContext } from \"../components/UserContext\";\r\n\r\nexport default function CommentPage() {\r\n  const { id } = useParams(); // Post ID from the URL\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const { userInfo } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    // Fetch comments for the specific post\r\n    fetch(`http://localhost:4050/post/${id}/comments`)\r\n      .then((response) => response.json())\r\n      .then((data) => setComments(data));\r\n  }, [id]);\r\n\r\n  async function addComment() {\r\n    if (!newComment.trim()) {\r\n      alert(\"Comment cannot be empty.\");\r\n      return;\r\n    }\r\n\r\n    const response = await fetch(`http://localhost:4050/post/${id}/comments`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ text: newComment }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const addedComment = await response.json();\r\n      setComments([...comments, addedComment]); // Add the new comment to the state\r\n      setNewComment(\"\"); // Clear the input field\r\n    } else {\r\n      alert(\"Failed to add comment.\");\r\n    }\r\n  }\r\n\r\n  async function deleteComment(commentId) {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this comment?\");\r\n    if (!confirmDelete) return;\r\n\r\n    const response = await fetch(`http://localhost:4050/post/${id}/comments/${commentId}`, {\r\n      method: \"DELETE\",\r\n      credentials: \"include\",\r\n    });\r\n\r\n    if (response.ok) {\r\n      setComments(comments.filter((comment) => comment._id !== commentId)); // Remove the deleted comment\r\n    } else {\r\n      alert(\"Failed to delete comment.\");\r\n    }\r\n  }\r\n\r\n  async function addRating(commentId, rating) {\r\n    const response = await fetch(`http://localhost:4050/post/${id}/comments/${commentId}/rate`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ rating }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const updatedComment = await response.json();\r\n      setComments(comments.map((comment) => (comment._id === commentId ? updatedComment : comment))); // Update the rated comment\r\n    } else {\r\n      alert(\"Failed to rate the comment.\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"comment-section\">\r\n      <h2>Comments</h2>\r\n      <div className=\"comment-input\">\r\n        <textarea\r\n          placeholder=\"Write a comment...\"\r\n          value={newComment}\r\n          onChange={(e) => setNewComment(e.target.value)}\r\n        ></textarea>\r\n        <button onClick={addComment}>Add Comment</button>\r\n      </div>\r\n      <div className=\"comments-list\">\r\n        {comments.map((comment) => (\r\n          <div key={comment._id} className=\"comment-item\">\r\n            <div className=\"comment-header\">\r\n              <strong>@{comment.author.username}</strong>{\" \"}\r\n              <small>{new Date(comment.createdAt).toLocaleString()}</small>\r\n            </div>\r\n            <p>{comment.text}</p>\r\n            <div className=\"rating\">\r\n              <span>Rate: </span>\r\n              {[1, 2, 3, 4, 5].map((star) => (\r\n                <button\r\n                  key={star}\r\n                  onClick={() => addRating(comment._id, star)}\r\n                  className={star <= (comment.rating || 0) ? \"active-star\" : \"\"}\r\n                >\r\n                  ★\r\n                </button>\r\n              ))}\r\n              <span>({comment.rating || 0})</span>\r\n            </div>\r\n            {userInfo.id === comment.author._id && (\r\n              <button className=\"delete-btn\" onClick={() => deleteComment(comment._id)}>\r\n                Delete\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}